
% Saved by Prover9-Mace4 Version 0.5, December 2007.
% Last line is a lie. It is there to stop the Prover9-Mace4
% GUI giving a warning when the file is loaded.
% This file was actually reated by BB Prover9 Autograder

set(ignore_option_dependencies). % GUI handles dependencies

if(Prover9). % Options for Prover9
  clear(auto).
  clear(auto_setup).
  clear(auto_limits).
  clear(auto_denials).
  clear(auto_inference).
  clear(auto_process).
  assign(eq_defs, pass).
  assign(max_seconds, 10).
  assign(max_weight, 2147483647).
  assign(sos_limit, -1).
  clear(predicate_elim).
  set(binary_resolution).
  set(paramodulation).
  set(factor).
end_if.

if(Mace4).   % Options for Mace4
  assign(max_seconds, 60).
end_if.

formulas(assumptions).

%% Festival Days
%% A logic puzzle by Brandon Bennett
%%
%% Prover9 file: festival_days.p9

%% To solve this first-order logic proof problem, you must replace
%% each of the assumption place-holders __An__ and the goal place-holder
%% __G__, with an approapriate first-order formula that captures the
%% meaning of the given English sentence.
%% 
%% Then run Prover9. 
%% If your representations are correct, it should find a Proof.
%% You can also check your representations using the Gradescope Autograder.

%% In writing the formulae, you should only use the following vocabulary:
%%
%% Logical symbols:           &  |  -  ->   <->  =  all  exists
%% Brackets and separators:   ( )  [  ]  ,  .
%% Variables:                 Whatever you like, but must be quantified.
%%
%% Propositions: FestivalDay, Happy, Moonday, Starday, Sumday, Sing, Dance, Ill, EatPancakes, EatJelly
%%
%% Use only the specified vocabulary, otherwise the autograder will not work.



%% A1: "Today is a festival day but I'm not Happy."

        exists x (FestivalDay & -Happy(x)).

%% A2: "Festivals only take place on Moondays, Stardays and Sumdays."

        FestivalDay -> Moonday | Starday | Sumday.

%% A3: "I'm always happy on Stardays"

        Starday -> Happy.

%% A4: "On Sumdays I eat pancakes and on Moondays I eat jelly."

        (Sumday -> EatPancakes) & (Moonday -> EatJelly).

%% A5: "On Moondays I sing and Dance"

        Moonday -> (Sing & Dance\0.

%% A6: "When I'm ill I can neither sing nor dance."

        Ill -> (-Sing & -Dance).

%% A7: "Eating pancakes or jelly makes me happy unless I'm ill."

        exists y exists x( (EatPancakes(y) | (EatJelly(y)) & -Ill(x) -> Happy(x)).


end_of_list.

formulas(goals).

%% GOAL: "What day is it? *"

          (Moonday & -Sumday) | (-Moonday & Sumday).

end_of_list.
